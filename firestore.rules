rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /inviteCodes/{document} {
      allow read;
      allow read, create, update, delete: if isAdmin(request.auth.uid);
    }
    match /settings/app {
      allow read;
      allow create, update, delete: if isAdmin(request.auth.uid);
    }

    match /{path=**}/stats/{itemId} {
      allow read: if isAdmin(request.auth.uid);
    }
    match /settings/{document=**} {
      allow read;
      allow create, update, delete: if isAdmin(request.auth.uid);
    }
    match /counts/{document=**} {
      allow read: if isAdmin(request.auth.uid);
    }
    match /company/{document=**} {
      allow read, create, update, delete: if isAdmin(request.auth.uid);
    }
    match /campaign/{document=**} {
      allow read;
      allow create, update, delete: if isAdmin(request.auth.uid);
    }
    match /users/{itemId} {

      allow read: if isOwner(resource.data) &&
      isSignedIn();

      allow create: if isSignedIn() &&
      isValidRequestData(request.resource.data);

      allow update: if isOwner(resource.data) &&
      isSignedIn();

      allow delete: if isOwner(resource.data) &&
      isSignedIn();
      allow read, create, update, delete: if isAdmin(request.auth.uid);
    }


    match /{path=**}/tasks/{itemId}{

      allow read: if isOwner(resource.data) &&
      isSignedIn();

      allow update: if isOwner(resource.data) &&
      isSignedIn();
      allow read, create, update, delete: if isAdmin(request.auth.uid);

    }
    match /pointsWallet/{itemId}{

      allow read: if isOwner(resource.data) &&
      isSignedIn();

      allow create: if isSignedIn() &&
      isValidRequestData(request.resource.data);

      allow update: if isOwner(resource.data) &&
      isSignedIn();
      allow read, create, update, delete: if isAdmin(request.auth.uid);
    }

    match /pointsConvertion/{itemId}{

      allow read: if isOwner(resource.data) &&
      isSignedIn();

      allow create: if isOwner(request.resource.data) &&
      isSignedIn();

      allow update: if isAdmin(request.auth.uid);

      allow read, create, update, delete: if isAdmin(request.auth.uid);

    }

    // FUNCTIONS
    function isSignedIn() {
      return request.auth != null || request.auth.token.admin == true;
    }
    function isOwner(requestData) {
      return request.auth.uid == requestData.uid;
    }

    function isValidRequestData(requestData) {
      return (
      requestData.uid ==  request.auth.uid &&
      requestData.uid is string &&
      requestData.uid != '' 
      );
    }
    function isAdmin(uid){
    	return get(/databases/$(database)/documents/users/$(uid)).data.claim == 'admin'
		}

  }
}